ORACLE SQL
-show the differents values of a column in the table
SELECT DISTINCT {column-name} FROM {table}

-show you the information between differents ranges of values
SELECT {column-name} FROM {table-name} WHERE {column-name} BETWEEN value1 AND value 2

*example
SELECT * FROM emp WHERE hiredate BETWEEN '05/01/1981' AND '12/09/1982'

SELECT * FROM emp WHERE sal NOT BETWEEN 950 AND 1600

-filtering conditions 
SELECT {column-name} FROM {table-name} WHERE ({condition}) {other condition}

*example
SELECT * FROM emp WHERE (COMM IS NULL AND SAL > 1000 AND SAL < 1500 AND SAL <> 1500) OR COMM = 0
*other example 
SELECT * FROM emp WHERE (COMM IS NULL OR COMM = 0) AND SAL > 1000 AND SAL < 1500 AND SAL <> 1500

-substitutes a long sentence or in a query
SELECT {rows-name} FROM {table-name} WHERE {row-name} IN ({value1,value2,....})

*example
SELECT ename, hiredate FROM EMP WHERE ename = 'FORD' OR ename='SMITH' OR ename = 'ALLEN'
SELECT ename, hiredate FROM EMP WHERE ename IN ('FORD','SMITH','ALLEN')

-like command
SELECT {column-name} FROM {table-name} WHERE {column-name} LIKE '%{m}'
*example
SELECT * FROM emp WHERE JOB LIKE '%GER'

LIKE 'a%' start with a
LIKE '%a' end with a
LIKE '%or%' or in any position
LIKE '_r%' r in the second position
LIKE 'a__%' start with a and have at least 2 characters in length 
LIKE 'a___%' start with a and have at least 2 characters in length
LIKE 'a%o' start with a finish with o

-aliasing query results
SELECT {column-name} {alias} FROM {table-name} 
*example
SELECT ENAME AS EMPLOYEE_NAME, SAL AS SALARY, COMM AS COMMISION FROM emp;
SELECT ENAME AS "EMPLOYEE NAME", SAL AS SALARY, COMM AS COMMISION FROM emp

-Concatetaning quety results 
SELECT '{message to concated}' || {column-name} FROM {table-name}
*example
SELECT 'Hello my name is ' || ename FROM emp  

-Concatenating and aliasing query
*example
SELECT ename || ' makes $ ' || sal || ' per month ' as "employee income" from emp

-Orden by
SELECT {column-name} FROM {table-name} ORDEN BY {argument}
*example
SELECT ename,sal FROM emp ORDEN BY ename  

-Orden by ASCEND 
SELECT {column-name} FROM {table-name} ORDEN BY {argument} ASC

-Orden by DESCEND
SELECT {column-name} FROM {table-name} ORDEN BY {argument} DESC

CREATE A TABLE

CREATE TABLE ASSIGNMENT(
    SUPPLIER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    SUPPLIER_NAME VARCHAR2(50) NOT NULL,
    CITY VARCHAR2(50) NOT NULL,
    STATE VARCHAR2(50) NOT NULL,
    TOTAL_SPENT FLOAT(24) NOT NULL,
    PRIMARY KEY(SUPPLIER_ID)
);

Single Row Function
-Concat
SELECT CONCAT ({message},{colum-name}) FROM {table-name}

*example
SELECT CONCAT ('Hello my name is ',ename) FROM emp
SELECT CONCAT ('Hello my name is ',ename) AS SENTENCE FROM emp

-Upper
SELECT UPPER({column-name}) FROM {table-name}
SELECT UPPER({message}) FROM {table-name}

*example 
SELECT UPPER(ename) FROM emp
SELECT UPPER('hello') FROM emp

*for a single row 
SELECT UPPER('hello')  FROM DUAL

-Lower
SELECT LOWER({column-name}) FROM {table-name}
SELECT LOWER({message}) FROM {table-name}

*example
SELECT LOWER(ename) FROM emp 
SELECT LOWER('HELLO') FROM emp

*for a single row 
SELECT LOWER('HELLO') FROM DUAL

-Initcap
SELECT initcap({message}) FROM ({table-name})

*example 
SELECT initcap('hello my name is') FROM DUAL
SELECT CONCAT(initcap('hello my name is '),ename) As SENTENCE FROM emp

-Length
SELECT length({column-name}) FROM {column-name}

*example
SELECT length(ename) FROM empl

-SUBSTR
SELECT SUBSTR({message},{init},{num-of-char-after}) FROM {table-name}

*example
SELECT SUBSTR('Hello',2,3) FROM DUAL

-LPAD
SELECT LPAD({message}, {no-of-char},{char}) FROM {table-name}

*example
SELECT LPAD('DAY',6,'$') FROM DUAL

-RPAD
SELECT RPAD({message}, {no-of-char},{char}) FROM {table-name}

*example
SELECT RPAD('DAY',6,'$') FROM DUAL

-LTRIM
SELECT LTRIM({message},{char}) FROM {table-name}

*example
SELECT LTRIM('hello','h') FROM DUAL

-ROUND
SELECT ROUND ({float},{no-of-numbre-after-dot}) FROM {table-name}

*example 
SELECT ROUND(100.346,2) FROM DUAL

-TRUNC
SELECT TRUNC({float},{no-of-numbre-after-dot}) FROM {table-name}
SELECT TRUNC({date}) FROM {table-name}
SELECT TRUNC({date},{type}) FROM {table-name}

*example
SELECT TRUNC(100.887,2) FROM DUAL
SELECT TRUNC(systimestamp) FROM DUAL
SELECT TRUNC(systimestamp,'MONTH') FROM DUAL / SELECT hiredate,TRUNC(hiredate,'MONTH') FROM emp

-sysdate
SELECT sysdate FROM {table-name}

*example
SELECT sysdate FROM DUAL

-sysTimeStamp
SELECT sysTimeStamp FROM {table-name}

*example
SELECT sysTimeStamp FROM DUAL

-add_months
SELECT add_months({date},{no-of-months}) FROM {table-name}

*example
SELECT add_months('05/12/2012',5) FROM DUAL

-MONTHS_BETWEEN
SELECT MONTHS_BETWEEN({date1},{date2}) FROM {table-name}

*example
SELECT MONTHS_BETWEEN('05/12/2012','03/26/1996') FROM DUAL

-Convert data 
TO_CHAR(sysdate,'Month DD,YYYY')->Jan 17 2023
TO_CHAR(123,'$999.99') -> $123.00

*example
SELECT TO_CHAR(sysdate,'ddth "of" month , yyyy') FROM DUAL
 
TO_DATE('2012-08-27','yyyy-mm-dd')

*example
SELECT TO_DATE('2012-08-27','yyyy-mm-dd') FROM DUAL -> 08/27/2012

SELECT ADD_MONTHS(TO_DATE('2012-08-27','yyyy-mm-dd'),2) FROM DUAL -> 10/27/2012

SELECT TO_DATE('27 of August, 2012','dd "of" month, yyyy') FROM DUAL -> 08/27/2012

-Change the null with a value
SELECT NVL({column-name}) FROM {table-name}

*example
SELECT ename, job, sal, NVL(comm,0) FROM emp WHERE empno IN(7639,7698,7566,7654)
SELECT empno,ename, job, sal, NVL(to_char(comm),'no data found') FROM emp WHERE empno IN(7639,7698,7566,7654) ORDER BY empno ASC

-null if the argument1 is the same as the argument 2 (NULLIF)
SELECT {column-name},NULLIF({arg1},{arg2}) FROM {table-name}

*example
SELECT ename, length(ename), NULLIF(length(ename),5) FROM emp 
SELECT ename, length(ename), NVL(to_char(NULLIF(length(ename),5)),'not found data') AS "Length Full" FROM emp
SELECT ename, length(ename), NVL(to_char(NULLIF(length(ename),5)),'not found data') AS "Length Full" , sal FROM emp WHERE sal>2000

-Function
COUNT() count the number of rows in a column
*example
SELECT COUNT(sal) FROM emp

AVG() calculate the average value of numbers in the rows in a numerical column
*example
SELECT AVG(sal) FROM emp

SUM() add the numbers in the rows in a numerical column
*example
SELECT AVG(sal) FROM emp

MIN() show you the min value in a row in a numerical column
*example
SELECT MIN(sal) FROM emp

MAX() show you the min value in a row in a numerical column
SELECT MAX(rating) FROM books

-GROUP BY
SELECT {column-name} FROM {table-name} GROUP BY {column-name}

*example 
SELECT avg(sal), job FROM emp GROUP BY job

!!!Where dont work on GROUP BY using functions so you need to replace with HAVING
SELECT {column-name} From {table-name} GROUP BY {column-name} HAVING {argument}

*example
SELECT avg(sal), job FROM emp GROUP BY job HAVING count(*)=2

-Exactly order on sql
SELECT {column-name} FROM {table-name} WHERE {condition} GROUP BY {column-name} HAVING {condition} ORDER BY {column-name}

*example
SELECT deptno,count(*) FROM emp GROUP BY deptno having count(*)>3 order by deptno  

