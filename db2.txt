IBM DB2
-Create a database
CREATE DATABASE {name}

*example
CREATE DATABASE books

-display database info
list database directory

-exit db2 
quit

-connect to a database
db2 connect to {database-name} user {user-name} using {password}

-Create a table

*example
CREATE TABLE BOOKS(
    ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    AUTHOR VARCHAR(255) NOT NULL,
    TITLE VARCHAR2(255) NOT NULL,
    ISBN VARCHAR(13) NULL,
    PRIMARY KEY(ID)
);

-open file and create a table into a database
db2 -stvf {direction}/{name}.sql

*example
db2 -stvf C:\users\downloads\table.sql

-Update data into a database
UPDATE {table-name} set {column-name} WHERE {condition}

*example
UPDATE books SET isbn=77777 WHERE id=1

-Delete data from the database
DELETE FROM {table-name} WHERE {condition}

*example
DELETE FROM books WHERE id=8

-show the differents values of a column in the table
SELECT DISTINCT {column-name} FROM {table}

*example
SELECT DISTINCT last_name FROM authors

-Orden by
SELECT {column-name} FROM {table-name} ORDEN BY {argument}
*example
SELECT ename,sal FROM emp ORDEN BY ename  

-Orden by ASCEND 
SELECT {column-name} FROM {table-name} ORDEN BY {argument} ASC

-Orden by DESCEND
SELECT {column-name} FROM {table-name} ORDEN BY {argument} DESC

-LIMIT clause
SELECT {column-name} FROM {table-name} LIMIT {codition}

*example
SELECT title FROM books ORDER BY author LIMIT 10

SELECT {column-name} FROM {table-name} LIMIT {(skip firts no), (limit no)}

*example
SELECT title FROM books ORDER BY author LIMIT 5,10 -> skip the first five and show me the next ten

-like command
SELECT {column-name} FROM {table-name} WHERE {column-name} LIKE '%{m}'
*example
SELECT * FROM emp WHERE JOB LIKE '%GER'

LIKE 'a%' start with a
LIKE '%a' end with a
LIKE '%or%' or in any position
LIKE '_r%' r in the second position
LIKE 'a__%' start with a and have at least 2 characters in length 
LIKE 'a___%' start with a and have at least 2 characters in length
LIKE 'a%o' start with a finish with o

-Function
COUNT() count the number of rows in a column
*example
SELECT COUNT(author_id) FROM author

AVG() calculate the average value of numbers in the rows in a numerical column
*example
SELECT AVG(total_pages) FROM books

SUM() add the numbers in the rows in a numerical column
*example
SELECT ADD(total_pages) FROM books

MIN() show you the min value in a row in a numerical column
*example
SELECT MIN(rating) FROM books

MAX() show you the min value in a row in a numerical column
SELECT MAX(rating) FROM books

-Delete all the values in a table but letting the structure (Truncating tables)
TRUNCATE TABLE {table-name} -> (DROP STORAGE|REUSE STORAGE) (IGNORE DELETE TRIGGERS|RESTRICT WHE DELETE TRIGGER) IMMEDIATE

*example
TRUNCATE TABLE books IMMEDIATE -> if you need to use rollback donÂ´t use rollback

-DROP 
DROP TABLE {table-name}



